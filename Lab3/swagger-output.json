{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Notes app",
    "description": "Simple app for manage notes"
  },
  "host": "localhost:3000",
  "basePath": "/",
  "tags": [
    {
      "name": "",
      "description": ""
    }
  ],
  "schemes": [],
  "securityDefinitions": {},
  "paths": {
    "/api/v1/user": {
      "get": {
        "description": "Get all users",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Array of all users",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "post": {
        "description": "Add user",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Add a user",
            "schema": {
              "$ref": "#/definitions/User_nid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "user": {
                  "$ref": "#/definitions/User"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "403": {
            "description": "User already exist",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "error": {
                  "type": "string",
                  "example": "user already exist"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "406": {
            "description": "username error",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "error": {
                  "type": "string",
                  "example": "username not supplied"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/v1/user/{userID}": {
      "get": {
        "description": "Get user by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userID",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User id"
          }
        ],
        "responses": {
          "200": {
            "description": "User",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "error": {
                  "type": "string",
                  "example": "user not found"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "delete": {
        "description": "Delete user by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userID",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User id"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "error": {
                  "type": "string",
                  "example": "user not found"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "patch": {
        "description": "Edit user",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userID",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User id"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "New name",
            "schema": {
              "$ref": "#/definitions/Note_nid"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "User already exist",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "error": {
                  "type": "string",
                  "example": "user already exist"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "error": {
                  "type": "string",
                  "example": "user not found"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "406": {
            "description": "name error",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "error": {
                  "type": "string",
                  "example": "name not supplied"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/v1/note": {
      "get": {
        "description": "Get notes",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Numper of page",
            "required": false,
            "type": "string"
          },
          {
            "name": "items_per_page",
            "in": "query",
            "description": "Items per page",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Note",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Note"
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "post": {
        "description": "Add note",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Add a note",
            "schema": {
              "$ref": "#/definitions/Note_nid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "note": {
                  "$ref": "#/definitions/Note"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "406": {
            "description": "note error",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "error": {
                  "type": "string",
                  "example": "noteID not supplied"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/v1/note/{noteID}": {
      "get": {
        "description": "Get note by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "noteID",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Note id"
          }
        ],
        "responses": {
          "200": {
            "description": "Note",
            "schema": {
              "$ref": "#/definitions/Note"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "error": {
                  "type": "string",
                  "example": "note not found"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "delete": {
        "description": "Delete note by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "noteID",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Note id"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "error": {
                  "type": "string",
                  "example": "note not found"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "patch": {
        "description": "Patch note by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "noteID",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Note id"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "New data",
            "schema": {
              "type": "object",
              "properties": {
                "Title": {
                  "type": "string",
                  "example": "Title"
                },
                "Note": {
                  "type": "string",
                  "example": "Content"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "note": {
                  "$ref": "#/definitions/Note"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "error": {
                  "type": "string",
                  "example": "note not found"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/v1/note/{noteID}/tag": {
      "get": {
        "description": "Get all tags for note",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "noteID",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Note id"
          }
        ],
        "responses": {
          "200": {
            "description": "Array of all tags for node",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Tag"
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "post": {
        "description": "Add tag to note",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "noteID",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Note id"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "Add a tag",
            "schema": {
              "type": "object",
              "properties": {
                "TagID": {
                  "type": "number",
                  "example": 0
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "tag": {
                  "$ref": "#/definitions/Tag"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "403": {
            "description": "Tag already exist",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "error": {
                  "type": "string",
                  "example": "tag already exist"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "406": {
            "description": "name error",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "error": {
                  "type": "string",
                  "example": "request body not found"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/v1/note/{noteID}/tag/{tagID}": {
      "delete": {
        "description": "Delete tag from note by id ",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "noteID",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Note id"
          },
          {
            "name": "tagID",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Tag id"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "error": {
                  "type": "string",
                  "example": "connection not found"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/v1/tag": {
      "get": {
        "description": "Get all tags",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Array of all tags",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Tag"
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "post": {
        "description": "Add tag",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Add a tag",
            "schema": {
              "$ref": "#/definitions/Tag_nid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "tag": {
                  "$ref": "#/definitions/Tag"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "403": {
            "description": "Tag already exist",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "error": {
                  "type": "string",
                  "example": "tag already exist"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "406": {
            "description": "name error",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "error": {
                  "type": "string",
                  "example": "request body not found"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/v1/tag/{tagID}": {
      "get": {
        "description": "Get user by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tagID",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Tag id"
          }
        ],
        "responses": {
          "200": {
            "description": "Tag",
            "schema": {
              "$ref": "#/definitions/Tag"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "error": {
                  "type": "string",
                  "example": "tag not found"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "delete": {
        "description": "Delete tag by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tagID",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Tag id"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "error": {
                  "type": "string",
                  "example": "tag not found"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "patch": {
        "description": "Patch tag by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tagID",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Tag id"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "New data",
            "schema": {
              "$ref": "#/definitions/Tag_nid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "note": {
                  "$ref": "#/definitions/Tag"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "error": {
                  "type": "string",
                  "example": "tag not found"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/v1/link/{linkID}": {
      "get": {
        "description": "Get link by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "linkID",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Link id"
          }
        ],
        "responses": {
          "200": {
            "description": "Link",
            "schema": {
              "$ref": "#/definitions/Link"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "error": {
                  "type": "string",
                  "example": "link not found"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "delete": {
        "description": "Delete link by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "linkID",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Link id"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "error": {
                  "type": "string",
                  "example": "link not found"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "patch": {
        "description": "Patch link by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "linkID",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "link id"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "New data",
            "schema": {
              "$ref": "#/definitions/Link_nid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "link": {
                  "$ref": "#/definitions/Link"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "error": {
                  "type": "string",
                  "example": "link not found"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/v1/link": {
      "post": {
        "description": "Add link",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Note id",
            "schema": {
              "$ref": "#/definitions/Link_nid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "link": {
                  "$ref": "#/definitions/Link"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "406": {
            "description": "noteID error",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "error": {
                  "type": "string",
                  "example": "noteID not supplied"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/v1/statistics": {
      "get": {
        "description": "Get API statistics",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Statistics by APIs",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "endpoint": {
                    "type": "string",
                    "example": "user"
                  },
                  "count": {
                    "type": "number",
                    "example": 1
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/new": {
      "get": {
        "description": "",
        "parameters": [],
        "responses": {}
      },
      "post": {
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/edit": {
      "get": {
        "description": "",
        "parameters": [],
        "responses": {}
      },
      "post": {
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/delete": {
      "post": {
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/viewport": {
      "post": {
        "description": "",
        "parameters": [],
        "responses": {}
      },
      "get": {
        "description": "",
        "parameters": [],
        "responses": {}
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "number",
          "example": 0
        },
        "Name": {
          "type": "string",
          "example": "Ivan"
        }
      }
    },
    "User_nid": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string",
          "example": "Ivan"
        }
      }
    },
    "Note": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "number",
          "example": 0
        },
        "Title": {
          "type": "string",
          "example": "Title"
        },
        "Content": {
          "type": "string",
          "example": "Content"
        }
      }
    },
    "Note_nid": {
      "type": "object",
      "properties": {
        "UserID": {
          "type": "number",
          "example": 0
        },
        "Title": {
          "type": "string",
          "example": "Title"
        },
        "Content": {
          "type": "string",
          "example": "Content"
        }
      }
    },
    "Link": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "number",
          "example": 0
        },
        "NoteID": {
          "type": "number",
          "example": 0
        }
      }
    },
    "Link_nid": {
      "type": "object",
      "properties": {
        "NoteID": {
          "type": "number",
          "example": 0
        }
      }
    },
    "Tag": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "number",
          "example": 0
        },
        "Name": {
          "type": "string",
          "example": "mood"
        }
      }
    },
    "Tag_nid": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string",
          "example": "mood"
        }
      }
    }
  }
}